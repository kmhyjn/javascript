4강 이론
스택, 힙, 파괴적 처리, 비파괴적 처리

기본 자료형과 복합 자료형

기본자료형: 이름 그대로 기본적인 자료형
ex. 숫자, 문자열, 불

복합자료형: 뭔가 좀 복잡해보이는 자료형
ex. 배열, 함수, 객체

기본자료형 -> 스택에 저장 : 상자처럼 쌓아둠
복합자료형 -> 힙에 저장 : 큰 자료들이 널려서 쌓임

스택 : 기본 자료형과 주소 등을 저장하는 메모리 공간
-> 기본 자료형은 직접, 복합 자료형은 그 주소가 저장된다.

힙 : 복합 자료형을 저장하는 메모리 공간
-> 복합 자료형의 본체(원본)가 저장

주소 : 저장된 자료의 위치
레퍼런스한다 : 스택의 주소가 힙의 자료를 가리키는 것
레퍼런스 변수 : 스택에 저장된 것중에 주소가 저장된 변수

비파괴적 처리와 파괴적 처리
어떠한 처리 후 원본이 변경되지 않는다 -> 비파괴적 처리
어떠한 처리 후 원본이 변경된다 -> 파괴적 처리

const의 제한
const -> 스택에 있는 값 변경할 때 오류가 발생
-> 힙에 있는 레퍼런스된 복합 자료형을 조작하는 것에는 문제가 없다.

let a = 10
let b = 20
a + b //30

const는 상수인데 왜 변경할 수 있을까??
const a = 10
a = 20 --> 오류발생

const b = [1, 2]
b.push(3) 	// 3
b		//(3) [1,2,3]

const ---> 상수이지만 스택에서만 값 변경이 불가능 함
배열은 const로 정의하여도 힙에 들어있는 값만 변경되고 스택은 변경되지 않음!!
